<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>黄文镔的博客</title>
  
  <subtitle>完美运用所学的一切</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hwb0011.github.io/"/>
  <updated>2019-07-05T06:16:45.622Z</updated>
  <id>http://hwb0011.github.io/</id>
  
  <author>
    <name>黄文镔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MarkDown使用教程(In Atom)</title>
    <link href="http://hwb0011.github.io/2019/06/12/MarkDown%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B(In%20Atom)/"/>
    <id>http://hwb0011.github.io/2019/06/12/MarkDown使用教程(In Atom)/</id>
    <published>2019-06-12T08:11:45.000Z</published>
    <updated>2019-07-05T06:16:45.622Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>程序猿都爱写博客，在写博客的过程中，大量运用的就是MarkDown语法了。MarkDown不只是用来写博客，日常生活中的感悟、工作中的心得体会、项目任务安排等等大篇幅的文章都可以用MarkDown来迅速的完成具有一定显示效果的文本。</p></blockquote><a id="more"></a><h1 id="1-MarkDown的编写工具"><a href="#1-MarkDown的编写工具" class="headerlink" title="1. MarkDown的编写工具"></a>1. <code>MarkDown</code>的编写工具</h1><blockquote><p>工欲善其事，必先利其器，要学习MarkDown，编写工具是必不可少的。</p></blockquote><p>其实严格来说，<code>MarkDown</code>没有专门的编写工具，通过简单的文本编辑器即可编写<code>MarkDown</code>文本，比如<code>Windows</code>的记事本。但简单的文本编辑器功能欠缺，没有高亮的文字表现，更没有文本效果可言，就像没有人用记事本写代码一样，最起码也得用个<code>Edit Plus</code>。</p><p>笔者菜鸟一枚，最近开始接触<code>MarkDown</code>，挑选的编辑器是<a href="https://atom.io/" target="_blank" rel="noopener">Atom</a>，<code>GitHub</code>出品的简洁强大的编辑器，插件众多，支持的语言也比较多，也是一个不错的前端开发编辑器。</p><h2 id="1-1-simplified-chinese-menu中文插件"><a href="#1-1-simplified-chinese-menu中文插件" class="headerlink" title="1.1 simplified-chinese-menu中文插件"></a>1.1 <code>simplified-chinese-menu</code>中文插件</h2><p>使用<code>Atom</code>时，首先对满屏的英文就有点抗拒，虽然写程序都用的英文，但对一些菜单、提示语还是更喜欢中文。</p><p><code>simplified-chinese-menu</code>这个插件基本将<code>Atom</code>里的各个菜单及提示语做到了汉化，瑕疵比较少，<code>Atom</code>装上这个插件，新手用起来方便多了。</p><h2 id="1-2-markdown-scroll-sync同步滚动插件"><a href="#1-2-markdown-scroll-sync同步滚动插件" class="headerlink" title="1.2 markdown-scroll-sync同步滚动插件"></a>1.2 <code>markdown-scroll-sync</code>同步滚动插件</h2><p><code>markdown-scroll-sync</code>同步滚动插件可以让预览与文本保持同步，减少查看预览的时间，确实是更方便了一些。</p><h2 id="1-3-markdown-table-editor表格编辑插件"><a href="#1-3-markdown-table-editor表格编辑插件" class="headerlink" title="1.3 markdown-table-editor表格编辑插件"></a>1.3 <code>markdown-table-editor</code>表格编辑插件</h2><p><code>MarkDown</code>在编写表格时稍微有些吃力，空格、对齐什么的，手敲太慢了有木有！！！<code>markdown-table-editor</code>表格编辑插件，让表格的编写更简单，你值得拥有。</p><h1 id="2-MarkDown的基础语法"><a href="#2-MarkDown的基础语法" class="headerlink" title="2. MarkDown的基础语法"></a>2. <code>MarkDown</code>的基础语法</h1><p>如果不算扩展，Markdown的语法绝对简单到让你爱不释手！Markdown语法分为如下几大部分：</p><p><code>标题</code> <code>段落</code> <code>引用</code> <code>代码块</code> <code>强调</code> <code>列表</code> <code>分割线</code> <code>链接</code> <code>图片</code> <code>表格</code> <code>流程图</code></p><h2 id="2-1-标题"><a href="#2-1-标题" class="headerlink" title="2.1 标题"></a>2.1 标题</h2><p>利用<code>#</code>标识标题，最对可以标识六级标题，<code>#</code>是一级标题，字体最大，<code>######</code>是六级标题，字体最小，示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><p>效果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://hwb0011.github.io/img/标题示例图片.png" alt="示例图片" title>                </div>                <div class="image-caption">示例图片</div>            </figure><h2 id="2-2-段落"><a href="#2-2-段落" class="headerlink" title="2.2 段落"></a>2.2 段落</h2><p>段落，在word中以回车换行来标识，而在md中需要一行空行进行分割两个段落，同一个段落中的多个空格、tab、回车符将被删减为一个空格（部分展示md的浏览器中，回车符可以表现为段内换行），在段落中允许存在换行，使用方式为两个以上空格加回车符，示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">这是段落一，下面是一行空行。</span><br><span class="line"></span><br><span class="line">这是段落二，这是一个空格 ，这是五个空格     ，这是两个tab   ，这是一个回车符</span><br><span class="line">，下面将用两个空格加回车进行段落内换行  </span><br><span class="line">换行完成，还是段落二。</span><br><span class="line"></span><br><span class="line">这是段落三。</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>这是段落一，下面是一行空行。</p><p>这是段落二，这是一个空格 ，这是五个空格     ，这是两个tab   ，这是一个回车符<br>，下面将用两个空格加回车进行段落内换行<br>换行完成，还是段落二。</p><p>这是段落三。</p><h2 id="2-3-引用"><a href="#2-3-引用" class="headerlink" title="2.3 引用"></a>2.3 引用</h2><p>md中使用<code>&gt;</code>来标识一个段落的引用，引用可以使用多个<code>&gt;</code>进行嵌套，示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;这里是引用的段落</span><br><span class="line">&gt;&gt;这里是一层嵌套的引用</span><br><span class="line">&gt;&gt;&gt;这里是两层嵌套的引用</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>这里是引用的段落</p><blockquote><p>这里是一层嵌套的引用</p><blockquote><p>这里是两层嵌套的引用</p></blockquote></blockquote></blockquote><h2 id="2-4-代码块"><a href="#2-4-代码块" class="headerlink" title="2.4 代码块"></a>2.4 代码块</h2><p>作为程序猿，代码在博客中必不可少，md中对代码块是有三种标识方式的。第一中是行内代码标识，用一对反引号来包裹几个字符，效果有些类似软件中常见的标签。第二种是在行前添加四个空格来标识一行代码，但此行前一行只能为空行或者代码块。第三种是使用一对三个反引号包裹一大段文字，可以标识一段代码，在三个反引号后可以加语言名称来达到关键字高亮效果。（PS：反引号在键盘左上角<code>Esc</code>按钮下方，第一次用时笔者还以为是单引号）示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">这里有一个行内代码`code`，下面有两行代码：</span><br><span class="line"></span><br><span class="line">    a line codes</span><br><span class="line">    a line codes</span><br><span class="line"></span><br><span class="line">下面有一段代码：</span><br><span class="line">（```）</span><br><span class="line">code and code and code</span><br><span class="line">code and code and code</span><br><span class="line">（```）</span><br><span class="line"></span><br><span class="line">下面有一段Java代码：</span><br><span class="line">（```java）</span><br><span class="line">public class Hello&#123;</span><br><span class="line">  public static void main (String[] args) &#123;</span><br><span class="line">    System.out.println(&quot;Hello world !&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">（```）</span><br></pre></td></tr></table></figure><blockquote><p>注：为了防止代码块标识符被转译，笔者在三个反引号前后加了括号，使用时应去除括号。</p></blockquote><p>效果如下：</p><p>这里有一个行内代码<code>code</code>，下面有两行代码：</p><pre><code>a line codesa line codes</code></pre><p>下面有一段代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">code and code and code</span><br><span class="line">code and code and code</span><br></pre></td></tr></table></figure><p>下面有一段Java代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Hello world !"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5-强调"><a href="#2-5-强调" class="headerlink" title="2.5 强调"></a>2.5 强调</h2><p>强调效果有粗体和斜体两种，一对<code>*</code>符号包裹的字符会显示为斜体，而一对<code>**</code>包裹的字符会显示为粗体，示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是*斜体*，这是**粗体**</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>这是<em>斜体</em>，这是<strong>粗体</strong></p><h2 id="2-6-列表"><a href="#2-6-列表" class="headerlink" title="2.6 列表"></a>2.6 列表</h2><p>列表的编写相当方便，无序列表只需在行前加<code>+</code>/<code>-</code>/<code>*</code>符号加空格即可，有序列表则在行前加<code>1.</code>等序号加空格即可，列表内容加入<code>[ ]</code>或<code>[x]</code>可用来标识待办事项，示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">+ 无序列表</span><br><span class="line">- 无序列表</span><br><span class="line">* 无序列表</span><br><span class="line"></span><br><span class="line">1. 有序列表</span><br><span class="line">2. 有序列表</span><br><span class="line">3. 有序列表</span><br><span class="line"></span><br><span class="line">* [ ] 待办1</span><br><span class="line">* [x] 待办2</span><br><span class="line">1. [ ] 待办3</span><br><span class="line">2. [x] 待办4</span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li>无序列表</li></ul><ul><li>无序列表</li></ul><ul><li>无序列表</li></ul><ol><li>有序列表</li><li>有序列表</li><li>有序列表</li></ol><ul><li><input disabled type="checkbox"> 待办1</li><li><input checked disabled type="checkbox"> 待办2</li></ul><ol><li><input disabled type="checkbox"> 待办3</li><li><input checked disabled type="checkbox"> 待办4</li></ol><h2 id="2-7-分割线"><a href="#2-7-分割线" class="headerlink" title="2.7 分割线"></a>2.7 分割线</h2><p>分割线在各个浏览器的显示形式都有所不同，使用三个<code>*</code>/<code>-</code>/<code>_</code>均可以实现一根分割线，示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">---</span><br><span class="line">___</span><br></pre></td></tr></table></figure><p>效果如下：</p><hr><hr><hr><h2 id="2-8-链接"><a href="#2-8-链接" class="headerlink" title="2.8 链接"></a>2.8 链接</h2><p>在md中想要跳转到某个外链，可以使用两种方式完成，第一种是md语法<code>[超链接名](超链接地址 &quot;超链接title&quot;)</code>title可加可不加，这种方式可能无法在当前标签页中打开网址，第二种是使用html中的<code>&lt;a&gt;</code>标签，可以指定target来控制网址打开方式。示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[百度](http://www.baidu.com/ &quot;百度一下&quot;)</span><br><span class="line"></span><br><span class="line">&lt;a href=&quot;http://www.baidu.com/&quot; target=&quot;_blank&quot;&gt;百度&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><a href="http://www.baidu.com/" title="百度一下" target="_blank" rel="noopener">百度</a></p><p><a href="http://www.baidu.com/" target="_blank_">百度</a></p><h2 id="2-9-图片"><a href="#2-9-图片" class="headerlink" title="2.9 图片"></a>2.9 图片</h2><p>图片的使用方式有些类似链接，在链接的格式前方加<code>!</code>即可，即<code>![图片名](图片地址)</code>，示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![github头像](https://github.com/fluidicon.png)</span><br></pre></td></tr></table></figure><p>效果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/fluidicon.png" alt="github头像" title>                </div>                <div class="image-caption">github头像</div>            </figure><h2 id="2-10-表格"><a href="#2-10-表格" class="headerlink" title="2.10 表格"></a>2.10 表格</h2><p>常常在文章中需要使用表格来罗列事项、比对事物，md支持了表格的简单形式，使用方式即使用<code>|</code>和<code>-</code>符号进行组合，示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|   表头一   |   表头二   |</span><br><span class="line">| --------- | --------- |</span><br><span class="line">| 表格内容一 | 表格内容二 |</span><br><span class="line">| 表格内容三 | 表格内容四 |</span><br></pre></td></tr></table></figure><blockquote><p>注：对齐居中等不需要太注意</p></blockquote><p>效果如下：</p><table><thead><tr><th>表头一</th><th>表头二</th></tr></thead><tbody><tr><td>表格内容一</td><td>表格内容二</td></tr><tr><td>表格内容三</td><td>表格内容四</td></tr></tbody></table><h2 id="2-11-流程图"><a href="#2-11-流程图" class="headerlink" title="2.11 流程图"></a>2.11 流程图</h2><p>markdown本身并不能直接转换流程图，但可以通过插件来完成，感兴趣的童鞋可以了解一下。不过笔者看来在markdown里写流程图还是比较麻烦的，简单的还好，复杂一点的就有点烧脑了。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;程序猿都爱写博客，在写博客的过程中，大量运用的就是MarkDown语法了。MarkDown不只是用来写博客，日常生活中的感悟、工作中的心得体会、项目任务安排等等大篇幅的文章都可以用MarkDown来迅速的完成具有一定显示效果的文本。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="工作之余" scheme="http://hwb0011.github.io/categories/%E5%B7%A5%E4%BD%9C%E4%B9%8B%E4%BD%99/"/>
    
    
      <category term="MarkDown" scheme="http://hwb0011.github.io/tags/MarkDown/"/>
    
      <category term="博客" scheme="http://hwb0011.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>利用GitHub和Hexo打造免费的个人博客</title>
    <link href="http://hwb0011.github.io/2019/06/01/%E5%88%A9%E7%94%A8GitHub%E5%92%8CHexo%E6%89%93%E9%80%A0%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://hwb0011.github.io/2019/06/01/利用GitHub和Hexo打造免费的个人博客/</id>
    <published>2019-06-01T03:30:30.000Z</published>
    <updated>2019-06-12T08:12:52.061Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>每个程序猿都需要一个个人博客，目前广泛出现在大家视野里的有CSDN、博客园、简书，但是他们却没有给用户一个专属的站点、一个好记的域名。你需要一个<code>http://xxx.xxx.xxx/</code>格式的网址，一个自由书写代码的站点，一个真正的个人博客。</p></blockquote><a id="more"></a><h1 id="1-GitHub提供的免费网站"><a href="#1-GitHub提供的免费网站" class="headerlink" title="1. GitHub提供的免费网站"></a>1. GitHub提供的免费网站</h1><h2 id="1-1-GitHub——面向开源及私有软件项目的托管平台"><a href="#1-1-GitHub——面向开源及私有软件项目的托管平台" class="headerlink" title="1.1 GitHub——面向开源及私有软件项目的托管平台"></a>1.1 GitHub——面向开源及私有软件项目的托管平台</h2><p><a href="https://github.com/" target="_blank" rel="noopener">GitHub官网</a></p><blockquote><p>作为开源代码库以及版本控制系统，Github拥有超过900万开发者用户。随着越来越多的应用程序转移到了云上，Github已经成为了管理软件开发以及发现已有代码的首选方法。<br><em>——来源：百度百科</em></p></blockquote><p>GitHub是目前最大的代码仓库，如果你还没有GitHub账号的话，就赶紧去官网注册一个吧。</p><h2 id="1-2-GitHub-Pages——免费提供最基础的静态网站"><a href="#1-2-GitHub-Pages——免费提供最基础的静态网站" class="headerlink" title="1.2 GitHub Pages——免费提供最基础的静态网站"></a>1.2 GitHub Pages——免费提供最基础的静态网站</h2><p><a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages官网</a></p><p>每个GitHub账户都可以免费开一个自己的静态网站（域名为 username.github.io），该网站由GitHub Pages提供，省去了域名、服务器、备案等一系列建站需要考虑的问题，只需要一份静态网站的代码即可。</p><p>首先你需要创建一个GitHub Pages repository。GitHub Pages repository跟普通的repository是一样的，唯一的区别就是他的名字必须叫做<code>username.gihub.io</code>。这个官方教程 GitHub Pages 写的十分好懂，按这个做完之后你就有了一个你的网址<code>username.github.io</code>！<strong>比如你的GitHub用户名是<code>abc</code>，那么你的repository名称和网址就是<code>abc.gihub.io</code></strong></p><p>现在离一个好网站只差一步了，就是把某个好网站的所有文件拷贝到你的库里面。<br>GitHub官方建议你使用博客生成工具<code>Jekyll</code> 。GitHub在库的设置里面还提供Jekyll主题选择。</p><p>本文将介绍的是<code>Hexo</code>生成工具。</p><h1 id="2-Hexo搭建的静态博客网站"><a href="#2-Hexo搭建的静态博客网站" class="headerlink" title="2. Hexo搭建的静态博客网站"></a>2. Hexo搭建的静态博客网站</h1><h2 id="2-1-Hexo——快速、简洁且高效的博客框架"><a href="#2-1-Hexo——快速、简洁且高效的博客框架" class="headerlink" title="2.1 Hexo——快速、简洁且高效的博客框架"></a>2.1 Hexo——快速、简洁且高效的博客框架</h2><p><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo官网</a></p><blockquote><p><strong>超快速度</strong><br>Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。<br><strong>支持 Markdown</strong><br>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。<br><strong>一键部署</strong><br>只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。<br><strong>丰富的插件</strong><br>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</p></blockquote><h3 id="2-1-1-安装前提"><a href="#2-1-1-安装前提" class="headerlink" title="2.1.1 安装前提"></a>2.1.1 安装前提</h3><p>安装<code>Hexo</code>相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：</p><ul><li>Node.js (Should be at least nodejs 6.9)</li><li>Git</li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用<code>npm</code>即可完成<code>Hexo</code>的安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p><blockquote><p><strong>Mac 用户</strong><br>您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安装命令行工具。</p></blockquote><h3 id="2-1-2-安装-Git"><a href="#2-1-2-安装-Git" class="headerlink" title="2.1.2 安装 Git"></a>2.1.2 安装 Git</h3><p>Windows：下载并安装 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>.   Mac：使用 <a href="http://mxcl.github.com/homebrew/" target="_blank" rel="noopener">Homebrew</a>, <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> ：<code>brew install git</code>;或下载 <a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noopener">安装程序</a> 安装。<br>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code>。   Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code>。</p><blockquote><p><strong>Windows 用户</strong><br>由于众所周知的原因，从上面的链接下载git for windows最好挂上一个代理，否则下载速度十分缓慢。也可以参考<a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">这个页面</a>，收录了存储于百度云的下载地址。</p></blockquote><h3 id="2-1-3-安装-Node-js"><a href="#2-1-3-安装-Node-js" class="headerlink" title="2.1.3 安装 Node.js"></a>2.1.3 安装 Node.js</h3><p>安装 Node.js 的最佳方式是使用 <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm</a>。</p><p>cURL:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure><p>Wget:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install stable</span><br></pre></td></tr></table></figure><p>或者您也可以下载 <a href="http://nodejs.org/" target="_blank" rel="noopener">安装程序</a> 来安装。</p><blockquote><p><strong>Windows 用户</strong><br>对于windows用户来说，建议使用安装程序进行安装。安装时，请勾选Add to PATH选项。<br>另外，您也可以使用Git Bash，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。由于Hexo的很多操作都涉及到命令行，您可以考虑始终使用Git Bash来进行操作。</p></blockquote><h3 id="2-1-4-安装-Hexo"><a href="#2-1-4-安装-Hexo" class="headerlink" title="2.1.4 安装 Hexo"></a>2.1.4 安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="2-1-5-建站"><a href="#2-1-5-建站" class="headerlink" title="2.1.5 建站"></a>2.1.5 建站</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><h2 id="2-2-Hexo的自定义配置及博客主题"><a href="#2-2-Hexo的自定义配置及博客主题" class="headerlink" title="2.2 Hexo的自定义配置及博客主题"></a>2.2 Hexo的自定义配置及博客主题</h2><h3 id="2-2-1-config-yml"><a href="#2-2-1-config-yml" class="headerlink" title="2.2.1 _config.yml"></a>2.2.1 _config.yml</h3><p>网站的配置信息，您可以在此配置大部分的参数。文件内各个配置参数均有详细备注，按规则填入所需即可。</p><h3 id="2-2-2-package-json"><a href="#2-2-2-package-json" class="headerlink" title="2.2.2 package.json"></a>2.2.2 package.json</h3><p>应用程序的信息，EJS、 Stylus 和 Markdown renderer 已默认安装，您可以自由移除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">package.json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;hexo-site&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;0.0.0&quot;,</span><br><span class="line">  &quot;private&quot;: true,</span><br><span class="line">  &quot;hexo&quot;: &#123;</span><br><span class="line">    &quot;version&quot;: &quot;&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;hexo&quot;: &quot;^3.8.0&quot;,</span><br><span class="line">    &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;,</span><br><span class="line">    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,</span><br><span class="line">    &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;,</span><br><span class="line">    &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;,</span><br><span class="line">    &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;,</span><br><span class="line">    &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;,</span><br><span class="line">    &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;,</span><br><span class="line">    &quot;hexo-server&quot;: &quot;^0.3.3&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-3-scaffolds"><a href="#2-2-3-scaffolds" class="headerlink" title="2.2.3 scaffolds"></a>2.2.3 scaffolds</h3><p>模版文件夹，当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p><p>Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p><h3 id="2-2-4-source"><a href="#2-2-4-source" class="headerlink" title="2.2.4 source"></a>2.2.4 source</h3><p>资源文件夹是存放用户资源的地方，除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p><h3 id="2-2-5-themes"><a href="#2-2-5-themes" class="headerlink" title="2.2.5 themes"></a>2.2.5 themes</h3><p>主题文件夹，Hexo 会根据主题来生成静态页面。GitHub上存在许多第三方主题，根据主题的文档介绍引入Hexo项目中，会在主题文件夹下生成一个相应的文件夹，再修改_config.xml文件夹的theme属性即可。</p><p>本文将要介绍的是<code>Indigo</code>主题。</p><h1 id="3-Indigo主题——Material-Design-风格的Hexo主题"><a href="#3-Indigo主题——Material-Design-风格的Hexo主题" class="headerlink" title="3. Indigo主题——Material Design 风格的Hexo主题"></a>3. Indigo主题——Material Design 风格的Hexo主题</h1><p><a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="noopener">Indigo in GitHub</a></p><blockquote><p>仅支持 IE10+ 等现代浏览器。<br>去 jQuery，更轻。相信现代浏览器的原生兼容性。<br>使用 Less 作为 css 预处理器，需要安装 hexo-renderer-less。<br>添加了英文字体支持 Roboto。<br>添加了一些波纹效果。<br>无前端依赖的分享实现。<br>基于静态数据的站内搜索，无第三方侵入。<br>支持文章打赏。</p></blockquote><p>现有两个主题分支，我的博客中使用的是<code>card</code>分支卡片风格主题，<code>master</code>分支是旧版平铺式风格主题。</p><h2 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h2><p>安装需确认你的 Hexo 版本在 3.0 以上，以及 Node 版本为 6.x 以上，在 Hexo 根目录，执行以下命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</span><br></pre></td></tr></table></figure><h3 id="3-1-1-切换主题"><a href="#3-1-1-切换主题" class="headerlink" title="3.1.1 切换主题"></a>3.1.1 切换主题</h3><p>执行<code>git branch</code>显示所有本地分支，如果只存在一个分支，可以执行下面的命令获取另一分支的主题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 获取远程 card 分支，并切换</span><br><span class="line">$ git checkout -b card origin/card</span><br><span class="line"></span><br><span class="line"># 获取远程 master 分支，并切换</span><br><span class="line">$ git checkout -b master origin/master</span><br></pre></td></tr></table></figure><p>此命令只需执行一次，之后使用<code>git checkout [branch]</code>命令在两个主题之间切换。</p><h3 id="3-1-2-依赖安装"><a href="#3-1-2-依赖安装" class="headerlink" title="3.1.2 依赖安装"></a>3.1.2 依赖安装</h3><p>还是在 Hexo 根目录，如果以下插件已安装过，无需再次安装。</p><p><strong>Less</strong></p><p>主题默认使用 less 作为 css 预处理工具。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-renderer-less --save</span><br></pre></td></tr></table></figure><p><strong>Feed</strong></p><p>用于生成 rss。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p><strong>Json-content</strong></p><p>用于生成静态站点数据，用作站内搜索的数据源。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure><p><strong>QRCode</strong></p><p>用于生成微信分享二维码。</p><p>可选，不安装时会请求<code>jiathis Api</code>生成二维码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-helper-qrcode --save</span><br></pre></td></tr></table></figure><h3 id="3-1-3-开启标签页"><a href="#3-1-3-开启标签页" class="headerlink" title="3.1.3 开启标签页"></a>3.1.3 开启标签页</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>修改 hexo/source/tags/index.md 的元数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: tags</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="3-1-4-开启分类页"><a href="#3-1-4-开启分类页" class="headerlink" title="3.1.4 开启分类页"></a>3.1.4 开启分类页</h3><p>仅 card theme 支持。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>修改 hexo/source/categories/index.md 的元数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: categories</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="3-2-常见问题"><a href="#3-2-常见问题" class="headerlink" title="3.2 常见问题"></a>3.2 常见问题</h2><h3 id="3-2-1-如何设置文章摘要"><a href="#3-2-1-如何设置文章摘要" class="headerlink" title="3.2.1 如何设置文章摘要"></a>3.2.1 如何设置文章摘要</h3><p>在 Markdown 中加<code>&lt;!-- more --&gt;</code></p><h3 id="3-2-2-文章如何添加多个标签"><a href="#3-2-2-文章如何添加多个标签" class="headerlink" title="3.2.2 文章如何添加多个标签"></a>3.2.2 文章如何添加多个标签</h3><p>有两种多标签格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags: [a, b, c]</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">  - a</span><br><span class="line">  - b</span><br><span class="line">  - c</span><br></pre></td></tr></table></figure><h3 id="3-2-3-修改-brand-图片（菜单上方背景图）"><a href="#3-2-3-修改-brand-图片（菜单上方背景图）" class="headerlink" title="3.2.3 修改 brand 图片（菜单上方背景图）"></a>3.2.3 修改 brand 图片（菜单上方背景图）</h3><p>替换 themes\indigo\source\img\brand.jpg，保持原文件名不变。</p><h3 id="3-2-4-如何在文章中使用图标"><a href="#3-2-4-如何在文章中使用图标" class="headerlink" title="3.2.4 如何在文章中使用图标"></a>3.2.4 如何在文章中使用图标</h3><p>先到 <a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">fontawesome</a> 找到你需要的图标名，比如：book，按以下格式使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;i class=&quot;icon icon-book&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure><p>图标样式前缀均为 icon，此外还有 5 个图标大小调节类和 1 个间距类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 1.3倍大小 --&gt;</span><br><span class="line">&lt;i class=&quot;icon icon-book icon-lg&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;!-- 2倍大小 --&gt;</span><br><span class="line">&lt;i class=&quot;icon icon-book icon-2x&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;!-- 3倍大小 --&gt;</span><br><span class="line">&lt;i class=&quot;icon icon-book icon-3x&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;!-- 4倍大小 --&gt;</span><br><span class="line">&lt;i class=&quot;icon icon-book icon-4x&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;!-- 5倍大小 --&gt;</span><br><span class="line">&lt;i class=&quot;icon icon-book icon-5x&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;!-- 5px右边距 --&gt;</span><br><span class="line">&lt;i class=&quot;icon icon-book icon-pr&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;!-- 5px左边距 --&gt;</span><br><span class="line">&lt;i class=&quot;icon icon-book icon-pl&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure><h3 id="3-2-5-个别图标无法显示"><a href="#3-2-5-个别图标无法显示" class="headerlink" title="3.2.5 个别图标无法显示"></a>3.2.5 个别图标无法显示</h3><p>如果你的浏览器安装了 <code>ADBlock</code>，它会屏蔽 <code>SNS</code> 相关的内容，比如：Github。</p><p>解决办法：可配置 ADBlock 不在你的站点运行。</p><h3 id="3-2-6-生成站点后没有样式"><a href="#3-2-6-生成站点后没有样式" class="headerlink" title="3.2.6 生成站点后没有样式"></a>3.2.6 生成站点后没有样式</h3><p>安装less</p><h3 id="3-2-7-自行修改样式线上不生效"><a href="#3-2-7-自行修改样式线上不生效" class="headerlink" title="3.2.7 自行修改样式线上不生效"></a>3.2.7 自行修改样式线上不生效</h3><p>因为主题默认引用 <code>cdn</code> 样式，只有主题更新时，<code>cdn</code> 中的样式才会变化。 如果想使用自己修改的样式，需要把修改配置中的<code>cdn: false</code>。这样就不在引用<code>cdn</code>资源，使用本地资源了。</p><h3 id="3-2-8-更改样式后网站没有生效"><a href="#3-2-8-更改样式后网站没有生效" class="headerlink" title="3.2.8 更改样式后网站没有生效"></a>3.2.8 更改样式后网站没有生效</h3><p>确认非缓存问题后，执行 <code>hexo clean</code> 再进行生成上传。</p><blockquote><p>建议每次提交时都执行一次<code>hexo clean</code>，可以在项目目录下创建一个shell脚本，执行命令<code>hexo clean &amp;&amp; hexo generate --deploy</code>，运行后即可保证每次修改都能生效。</p></blockquote><h3 id="3-2-9-更改站点配色"><a href="#3-2-9-更改站点配色" class="headerlink" title="3.2.9 更改站点配色"></a>3.2.9 更改站点配色</h3><p>编辑 themes\indigo\source\css_partial\variable.less，更改对应的颜色变量。</p><p>配色参考：<a href="http://www.materialpalette.com/" target="_blank" rel="noopener">Material Design Color Palette Generator</a></p><blockquote><p>注意：使用自定义配色时需把主题配置中的 cdn 关闭，cdn: false。</p></blockquote><h3 id="3-2-10-添加404页面"><a href="#3-2-10-添加404页面" class="headerlink" title="3.2.10 添加404页面"></a>3.2.10 添加404页面</h3><p>在 hexo/source 目录内新建 404.html。</p><p>设置元数据信息，如果不想套用主题布局可设置 layout 为 false。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: false    </span><br><span class="line">title: &quot;My Blog Name | 404&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="3-2-11-在博客中使用-Emoji"><a href="#3-2-11-在博客中使用-Emoji" class="headerlink" title="3.2.11 在博客中使用 Emoji"></a>3.2.11 在博客中使用 Emoji</h3><p>参考 <a href="https://github.com/yscoder/hexo-theme-indigo/issues/90" target="_blank" rel="noopener">Can i use emoji in mypage?</a></p><h2 id="3-3-自定义页面"><a href="#3-3-自定义页面" class="headerlink" title="3.3 自定义页面"></a>3.3 自定义页面</h2><p>主题 Card 分支为自定义页面提供了定制化模块支持，特此简单介绍。</p><h3 id="3-3-1-创建自定义页面"><a href="#3-3-1-创建自定义页面" class="headerlink" title="3.3.1 创建自定义页面"></a>3.3.1 创建自定义页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page pageName</span><br></pre></td></tr></table></figure><p>执行命令后会在你的 Hexo 根目录 <code>source/</code> 目录下生成一个与你刚才输入的 <code>pageName</code> 一样的文件夹，里面只有一个 <code>index.md</code>。</p><h3 id="3-3-2-页面配置"><a href="#3-3-2-页面配置" class="headerlink" title="3.3.2 页面配置"></a>3.3.2 页面配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">layout: page      # 必须</span><br><span class="line">title: pageTitle  # 必须，页面名称</span><br><span class="line">description: 用户自定义页面功能演示       # 页面二级标题，描述性文字</span><br><span class="line">comments: false     # 禁用评论，可选，默认开启</span><br><span class="line">reward: false       # 禁用打赏，可选，默认开启</span><br><span class="line">----</span><br></pre></td></tr></table></figure><h3 id="3-3-3-模块和内容输入"><a href="#3-3-3-模块和内容输入" class="headerlink" title="3.3.3 模块和内容输入"></a>3.3.3 模块和内容输入</h3><p>自定义页面中，<code>image</code>、<code>blockquote</code>、<code>pre</code> 等将被赋予特殊的样式。此外，提供了<code>@moduleName{ ... }</code>格式的标记用于包裹内容，赋予样式。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;每个程序猿都需要一个个人博客，目前广泛出现在大家视野里的有CSDN、博客园、简书，但是他们却没有给用户一个专属的站点、一个好记的域名。你需要一个&lt;code&gt;http://xxx.xxx.xxx/&lt;/code&gt;格式的网址，一个自由书写代码的站点，一个真正的个人博客。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="工作之余" scheme="http://hwb0011.github.io/categories/%E5%B7%A5%E4%BD%9C%E4%B9%8B%E4%BD%99/"/>
    
    
      <category term="博客" scheme="http://hwb0011.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="前端" scheme="http://hwb0011.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="hexo" scheme="http://hwb0011.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
