{"meta":{"title":"黄文镔的博客","subtitle":"完美运用所学的一切","description":"黄文镔的博客，文章主题围绕Android相关编程技术，主要涉及Java和Kotlin语言","author":"黄文镔","url":"http://hwb0011.github.io","root":"/"},"pages":[{"title":"黄文镔的博客 | 404","date":"2019-07-05T05:27:37.060Z","updated":"2019-07-05T05:27:37.060Z","comments":true,"path":"404.html","permalink":"http://hwb0011.github.io/404.html","excerpt":"","text":""},{"title":"分类","date":"2019-06-01T05:38:36.000Z","updated":"2019-06-01T07:29:26.338Z","comments":false,"path":"categories/index.html","permalink":"http://hwb0011.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-06-01T05:35:29.000Z","updated":"2019-06-01T07:29:14.449Z","comments":false,"path":"tags/index.html","permalink":"http://hwb0011.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"MarkDown使用教程(In Atom)","slug":"MarkDown使用教程(In Atom)","date":"2019-06-12T08:11:45.000Z","updated":"2019-07-05T06:16:45.622Z","comments":true,"path":"2019/06/12/MarkDown使用教程(In Atom)/","link":"","permalink":"http://hwb0011.github.io/2019/06/12/MarkDown使用教程(In Atom)/","excerpt":"程序猿都爱写博客，在写博客的过程中，大量运用的就是MarkDown语法了。MarkDown不只是用来写博客，日常生活中的感悟、工作中的心得体会、项目任务安排等等大篇幅的文章都可以用MarkDown来迅速的完成具有一定显示效果的文本。","text":"程序猿都爱写博客，在写博客的过程中，大量运用的就是MarkDown语法了。MarkDown不只是用来写博客，日常生活中的感悟、工作中的心得体会、项目任务安排等等大篇幅的文章都可以用MarkDown来迅速的完成具有一定显示效果的文本。 1. MarkDown的编写工具 工欲善其事，必先利其器，要学习MarkDown，编写工具是必不可少的。 其实严格来说，MarkDown没有专门的编写工具，通过简单的文本编辑器即可编写MarkDown文本，比如Windows的记事本。但简单的文本编辑器功能欠缺，没有高亮的文字表现，更没有文本效果可言，就像没有人用记事本写代码一样，最起码也得用个Edit Plus。 笔者菜鸟一枚，最近开始接触MarkDown，挑选的编辑器是Atom，GitHub出品的简洁强大的编辑器，插件众多，支持的语言也比较多，也是一个不错的前端开发编辑器。 1.1 simplified-chinese-menu中文插件使用Atom时，首先对满屏的英文就有点抗拒，虽然写程序都用的英文，但对一些菜单、提示语还是更喜欢中文。 simplified-chinese-menu这个插件基本将Atom里的各个菜单及提示语做到了汉化，瑕疵比较少，Atom装上这个插件，新手用起来方便多了。 1.2 markdown-scroll-sync同步滚动插件markdown-scroll-sync同步滚动插件可以让预览与文本保持同步，减少查看预览的时间，确实是更方便了一些。 1.3 markdown-table-editor表格编辑插件MarkDown在编写表格时稍微有些吃力，空格、对齐什么的，手敲太慢了有木有！！！markdown-table-editor表格编辑插件，让表格的编写更简单，你值得拥有。 2. MarkDown的基础语法如果不算扩展，Markdown的语法绝对简单到让你爱不释手！Markdown语法分为如下几大部分： 标题 段落 引用 代码块 强调 列表 分割线 链接 图片 表格 流程图 2.1 标题利用#标识标题，最对可以标识六级标题，#是一级标题，字体最大，######是六级标题，字体最小，示例如下： 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 效果如下： 示例图片 2.2 段落段落，在word中以回车换行来标识，而在md中需要一行空行进行分割两个段落，同一个段落中的多个空格、tab、回车符将被删减为一个空格（部分展示md的浏览器中，回车符可以表现为段内换行），在段落中允许存在换行，使用方式为两个以上空格加回车符，示例如下： 1234567这是段落一，下面是一行空行。这是段落二，这是一个空格 ，这是五个空格 ，这是两个tab ，这是一个回车符，下面将用两个空格加回车进行段落内换行 换行完成，还是段落二。这是段落三。 效果如下： 这是段落一，下面是一行空行。 这是段落二，这是一个空格 ，这是五个空格 ，这是两个tab ，这是一个回车符，下面将用两个空格加回车进行段落内换行换行完成，还是段落二。 这是段落三。 2.3 引用md中使用&gt;来标识一个段落的引用，引用可以使用多个&gt;进行嵌套，示例如下： 123&gt;这里是引用的段落&gt;&gt;这里是一层嵌套的引用&gt;&gt;&gt;这里是两层嵌套的引用 效果如下： 这里是引用的段落 这里是一层嵌套的引用 这里是两层嵌套的引用 2.4 代码块作为程序猿，代码在博客中必不可少，md中对代码块是有三种标识方式的。第一中是行内代码标识，用一对反引号来包裹几个字符，效果有些类似软件中常见的标签。第二种是在行前添加四个空格来标识一行代码，但此行前一行只能为空行或者代码块。第三种是使用一对三个反引号包裹一大段文字，可以标识一段代码，在三个反引号后可以加语言名称来达到关键字高亮效果。（PS：反引号在键盘左上角Esc按钮下方，第一次用时笔者还以为是单引号）示例如下： 12345678910111213141516171819这里有一个行内代码`code`，下面有两行代码： a line codes a line codes下面有一段代码：（```）code and code and codecode and code and code（```）下面有一段Java代码：（```java）public class Hello&#123; public static void main (String[] args) &#123; System.out.println(&quot;Hello world !&quot;); &#125;&#125;（```） 注：为了防止代码块标识符被转译，笔者在三个反引号前后加了括号，使用时应去除括号。 效果如下： 这里有一个行内代码code，下面有两行代码： a line codes a line codes下面有一段代码： 12code and code and codecode and code and code 下面有一段Java代码： 12345public class Hello&#123; public static void main (String[] args) &#123; System.out.println(\"Hello world !\"); &#125;&#125; 2.5 强调强调效果有粗体和斜体两种，一对*符号包裹的字符会显示为斜体，而一对**包裹的字符会显示为粗体，示例如下： 1这是*斜体*，这是**粗体** 效果如下： 这是斜体，这是粗体 2.6 列表列表的编写相当方便，无序列表只需在行前加+/-/*符号加空格即可，有序列表则在行前加1.等序号加空格即可，列表内容加入[ ]或[x]可用来标识待办事项，示例如下： 123456789101112+ 无序列表- 无序列表* 无序列表1. 有序列表2. 有序列表3. 有序列表* [ ] 待办1* [x] 待办21. [ ] 待办32. [x] 待办4 效果如下： 无序列表 无序列表 无序列表 有序列表 有序列表 有序列表 待办1 待办2 待办3 待办4 2.7 分割线分割线在各个浏览器的显示形式都有所不同，使用三个*/-/_均可以实现一根分割线，示例如下： 123***---___ 效果如下： 2.8 链接在md中想要跳转到某个外链，可以使用两种方式完成，第一种是md语法[超链接名](超链接地址 &quot;超链接title&quot;)title可加可不加，这种方式可能无法在当前标签页中打开网址，第二种是使用html中的&lt;a&gt;标签，可以指定target来控制网址打开方式。示例如下： 123[百度](http://www.baidu.com/ &quot;百度一下&quot;)&lt;a href=&quot;http://www.baidu.com/&quot; target=&quot;_blank&quot;&gt;百度&lt;/a&gt; 效果如下： 百度 百度 2.9 图片图片的使用方式有些类似链接，在链接的格式前方加!即可，即![图片名](图片地址)，示例如下： 1![github头像](https://github.com/fluidicon.png) 效果如下： github头像 2.10 表格常常在文章中需要使用表格来罗列事项、比对事物，md支持了表格的简单形式，使用方式即使用|和-符号进行组合，示例如下： 1234| 表头一 | 表头二 || --------- | --------- || 表格内容一 | 表格内容二 || 表格内容三 | 表格内容四 | 注：对齐居中等不需要太注意 效果如下： 表头一 表头二 表格内容一 表格内容二 表格内容三 表格内容四 2.11 流程图markdown本身并不能直接转换流程图，但可以通过插件来完成，感兴趣的童鞋可以了解一下。不过笔者看来在markdown里写流程图还是比较麻烦的，简单的还好，复杂一点的就有点烧脑了。","categories":[{"name":"工作之余","slug":"工作之余","permalink":"http://hwb0011.github.io/categories/工作之余/"}],"tags":[{"name":"MarkDown","slug":"MarkDown","permalink":"http://hwb0011.github.io/tags/MarkDown/"},{"name":"博客","slug":"博客","permalink":"http://hwb0011.github.io/tags/博客/"}]},{"title":"利用GitHub和Hexo打造免费的个人博客","slug":"利用GitHub和Hexo打造免费的个人博客","date":"2019-06-01T03:30:30.000Z","updated":"2019-06-12T08:12:52.061Z","comments":true,"path":"2019/06/01/利用GitHub和Hexo打造免费的个人博客/","link":"","permalink":"http://hwb0011.github.io/2019/06/01/利用GitHub和Hexo打造免费的个人博客/","excerpt":"每个程序猿都需要一个个人博客，目前广泛出现在大家视野里的有CSDN、博客园、简书，但是他们却没有给用户一个专属的站点、一个好记的域名。你需要一个http://xxx.xxx.xxx/格式的网址，一个自由书写代码的站点，一个真正的个人博客。","text":"每个程序猿都需要一个个人博客，目前广泛出现在大家视野里的有CSDN、博客园、简书，但是他们却没有给用户一个专属的站点、一个好记的域名。你需要一个http://xxx.xxx.xxx/格式的网址，一个自由书写代码的站点，一个真正的个人博客。 1. GitHub提供的免费网站1.1 GitHub——面向开源及私有软件项目的托管平台GitHub官网 作为开源代码库以及版本控制系统，Github拥有超过900万开发者用户。随着越来越多的应用程序转移到了云上，Github已经成为了管理软件开发以及发现已有代码的首选方法。——来源：百度百科 GitHub是目前最大的代码仓库，如果你还没有GitHub账号的话，就赶紧去官网注册一个吧。 1.2 GitHub Pages——免费提供最基础的静态网站GitHub Pages官网 每个GitHub账户都可以免费开一个自己的静态网站（域名为 username.github.io），该网站由GitHub Pages提供，省去了域名、服务器、备案等一系列建站需要考虑的问题，只需要一份静态网站的代码即可。 首先你需要创建一个GitHub Pages repository。GitHub Pages repository跟普通的repository是一样的，唯一的区别就是他的名字必须叫做username.gihub.io。这个官方教程 GitHub Pages 写的十分好懂，按这个做完之后你就有了一个你的网址username.github.io！ 比如你的GitHub用户名是abc，那么你的repository名称和网址就是abc.gihub.io 现在离一个好网站只差一步了，就是把某个好网站的所有文件拷贝到你的库里面。GitHub官方建议你使用博客生成工具Jekyll 。GitHub在库的设置里面还提供Jekyll主题选择。 本文将介绍的是Hexo生成工具。 2. Hexo搭建的静态博客网站2.1 Hexo——快速、简洁且高效的博客框架Hexo官网 超快速度Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。支持 MarkdownHexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。一键部署只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。丰富的插件Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。 2.1.1 安装前提安装Hexo相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序： Node.js (Should be at least nodejs 6.9) Git 如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用npm即可完成Hexo的安装。 1$ npm install -g hexo-cli 如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。 Mac 用户您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安装命令行工具。 2.1.2 安装 GitWindows：下载并安装 git. Mac：使用 Homebrew, MacPorts ：brew install git;或下载 安装程序 安装。Linux (Ubuntu, Debian)：sudo apt-get install git-core。 Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core。 Windows 用户由于众所周知的原因，从上面的链接下载git for windows最好挂上一个代理，否则下载速度十分缓慢。也可以参考这个页面，收录了存储于百度云的下载地址。 2.1.3 安装 Node.js安装 Node.js 的最佳方式是使用 nvm。 cURL: 1$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh Wget: 1$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh 安装完成后，重启终端并执行下列命令即可安装 Node.js。 1$ nvm install stable 或者您也可以下载 安装程序 来安装。 Windows 用户对于windows用户来说，建议使用安装程序进行安装。安装时，请勾选Add to PATH选项。另外，您也可以使用Git Bash，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。由于Hexo的很多操作都涉及到命令行，您可以考虑始终使用Git Bash来进行操作。 2.1.4 安装 Hexo所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。 1$ npm install -g hexo-cli 2.1.5 建站安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 新建完成后，指定文件夹的目录如下： 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 2.2 Hexo的自定义配置及博客主题2.2.1 _config.yml网站的配置信息，您可以在此配置大部分的参数。文件内各个配置参数均有详细备注，按规则填入所需即可。 2.2.2 package.json应用程序的信息，EJS、 Stylus 和 Markdown renderer 已默认安装，您可以自由移除。 1234567891011121314151617181920package.json&#123; &quot;name&quot;: &quot;hexo-site&quot;, &quot;version&quot;: &quot;0.0.0&quot;, &quot;private&quot;: true, &quot;hexo&quot;: &#123; &quot;version&quot;: &quot;&quot; &#125;, &quot;dependencies&quot;: &#123; &quot;hexo&quot;: &quot;^3.8.0&quot;, &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;, &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;, &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;, &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;, &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;, &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;, &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;, &quot;hexo-server&quot;: &quot;^0.3.3&quot; &#125;&#125; 2.2.3 scaffolds模版文件夹，当您新建文章时，Hexo 会根据 scaffold 来建立文件。 Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。 2.2.4 source资源文件夹是存放用户资源的地方，除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。 2.2.5 themes主题文件夹，Hexo 会根据主题来生成静态页面。GitHub上存在许多第三方主题，根据主题的文档介绍引入Hexo项目中，会在主题文件夹下生成一个相应的文件夹，再修改_config.xml文件夹的theme属性即可。 本文将要介绍的是Indigo主题。 3. Indigo主题——Material Design 风格的Hexo主题Indigo in GitHub 仅支持 IE10+ 等现代浏览器。去 jQuery，更轻。相信现代浏览器的原生兼容性。使用 Less 作为 css 预处理器，需要安装 hexo-renderer-less。添加了英文字体支持 Roboto。添加了一些波纹效果。无前端依赖的分享实现。基于静态数据的站内搜索，无第三方侵入。支持文章打赏。 现有两个主题分支，我的博客中使用的是card分支卡片风格主题，master分支是旧版平铺式风格主题。 3.1 安装安装需确认你的 Hexo 版本在 3.0 以上，以及 Node 版本为 6.x 以上，在 Hexo 根目录，执行以下命令。 1git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo 3.1.1 切换主题执行git branch显示所有本地分支，如果只存在一个分支，可以执行下面的命令获取另一分支的主题。 12345# 获取远程 card 分支，并切换$ git checkout -b card origin/card# 获取远程 master 分支，并切换$ git checkout -b master origin/master 此命令只需执行一次，之后使用git checkout [branch]命令在两个主题之间切换。 3.1.2 依赖安装还是在 Hexo 根目录，如果以下插件已安装过，无需再次安装。 Less 主题默认使用 less 作为 css 预处理工具。 1$ npm install hexo-renderer-less --save Feed 用于生成 rss。 1$ npm install hexo-generator-feed --save Json-content 用于生成静态站点数据，用作站内搜索的数据源。 1$ npm install hexo-generator-json-content --save QRCode 用于生成微信分享二维码。 可选，不安装时会请求jiathis Api生成二维码。 1$ npm install hexo-helper-qrcode --save 3.1.3 开启标签页1hexo new page tags 修改 hexo/source/tags/index.md 的元数据 123layout: tagscomments: false--- 3.1.4 开启分类页仅 card theme 支持。 1hexo new page categories 修改 hexo/source/categories/index.md 的元数据 123layout: categoriescomments: false--- 3.2 常见问题3.2.1 如何设置文章摘要在 Markdown 中加&lt;!-- more --&gt; 3.2.2 文章如何添加多个标签有两种多标签格式 1tags: [a, b, c] 或 1234tags: - a - b - c 3.2.3 修改 brand 图片（菜单上方背景图）替换 themes\\indigo\\source\\img\\brand.jpg，保持原文件名不变。 3.2.4 如何在文章中使用图标先到 fontawesome 找到你需要的图标名，比如：book，按以下格式使用： 1&lt;i class=&quot;icon icon-book&quot;&gt;&lt;/i&gt; 图标样式前缀均为 icon，此外还有 5 个图标大小调节类和 1 个间距类。 1234567891011121314&lt;!-- 1.3倍大小 --&gt;&lt;i class=&quot;icon icon-book icon-lg&quot;&gt;&lt;/i&gt;&lt;!-- 2倍大小 --&gt;&lt;i class=&quot;icon icon-book icon-2x&quot;&gt;&lt;/i&gt;&lt;!-- 3倍大小 --&gt;&lt;i class=&quot;icon icon-book icon-3x&quot;&gt;&lt;/i&gt;&lt;!-- 4倍大小 --&gt;&lt;i class=&quot;icon icon-book icon-4x&quot;&gt;&lt;/i&gt;&lt;!-- 5倍大小 --&gt;&lt;i class=&quot;icon icon-book icon-5x&quot;&gt;&lt;/i&gt;&lt;!-- 5px右边距 --&gt;&lt;i class=&quot;icon icon-book icon-pr&quot;&gt;&lt;/i&gt;&lt;!-- 5px左边距 --&gt;&lt;i class=&quot;icon icon-book icon-pl&quot;&gt;&lt;/i&gt; 3.2.5 个别图标无法显示如果你的浏览器安装了 ADBlock，它会屏蔽 SNS 相关的内容，比如：Github。 解决办法：可配置 ADBlock 不在你的站点运行。 3.2.6 生成站点后没有样式安装less 3.2.7 自行修改样式线上不生效因为主题默认引用 cdn 样式，只有主题更新时，cdn 中的样式才会变化。 如果想使用自己修改的样式，需要把修改配置中的cdn: false。这样就不在引用cdn资源，使用本地资源了。 3.2.8 更改样式后网站没有生效确认非缓存问题后，执行 hexo clean 再进行生成上传。 建议每次提交时都执行一次hexo clean，可以在项目目录下创建一个shell脚本，执行命令hexo clean &amp;&amp; hexo generate --deploy，运行后即可保证每次修改都能生效。 3.2.9 更改站点配色编辑 themes\\indigo\\source\\css_partial\\variable.less，更改对应的颜色变量。 配色参考：Material Design Color Palette Generator 注意：使用自定义配色时需把主题配置中的 cdn 关闭，cdn: false。 3.2.10 添加404页面在 hexo/source 目录内新建 404.html。 设置元数据信息，如果不想套用主题布局可设置 layout 为 false。 123layout: false title: &quot;My Blog Name | 404&quot;--- 3.2.11 在博客中使用 Emoji参考 Can i use emoji in mypage? 3.3 自定义页面主题 Card 分支为自定义页面提供了定制化模块支持，特此简单介绍。 3.3.1 创建自定义页面1hexo new page pageName 执行命令后会在你的 Hexo 根目录 source/ 目录下生成一个与你刚才输入的 pageName 一样的文件夹，里面只有一个 index.md。 3.3.2 页面配置123456layout: page # 必须title: pageTitle # 必须，页面名称description: 用户自定义页面功能演示 # 页面二级标题，描述性文字comments: false # 禁用评论，可选，默认开启reward: false # 禁用打赏，可选，默认开启---- 3.3.3 模块和内容输入自定义页面中，image、blockquote、pre 等将被赋予特殊的样式。此外，提供了@moduleName{ ... }格式的标记用于包裹内容，赋予样式。","categories":[{"name":"工作之余","slug":"工作之余","permalink":"http://hwb0011.github.io/categories/工作之余/"}],"tags":[{"name":"博客","slug":"博客","permalink":"http://hwb0011.github.io/tags/博客/"},{"name":"前端","slug":"前端","permalink":"http://hwb0011.github.io/tags/前端/"},{"name":"hexo","slug":"hexo","permalink":"http://hwb0011.github.io/tags/hexo/"}]}]}